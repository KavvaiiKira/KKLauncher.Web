// <auto-generated />
using System;
using KKLauncher.Web.Server.EfCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace KKLauncher.Web.Server.Migrations
{
    [DbContext(typeof(KKLauncherDbContext))]
    partial class KKLauncherDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("KKLauncher.DB.Entities.AppCollectionEntity", b =>
                {
                    b.Property<Guid>("AppId")
                        .HasColumnType("uuid")
                        .HasColumnName("AppId");

                    b.Property<Guid>("CollectionId")
                        .HasColumnType("uuid")
                        .HasColumnName("CollectionId");

                    b.HasKey("AppId", "CollectionId");

                    b.HasIndex("CollectionId");

                    b.ToTable("AppCollections", (string)null);
                });

            modelBuilder.Entity("KKLauncher.DB.Entities.AppEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<byte[]>("Image")
                        .IsRequired()
                        .HasColumnType("bytea")
                        .HasColumnName("Image");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.Property<Guid>("PCId")
                        .HasColumnType("uuid")
                        .HasColumnName("PCId");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Path");

                    b.Property<string>("SteamId")
                        .HasColumnType("text")
                        .HasColumnName("SteamId");

                    b.HasKey("Id");

                    b.HasIndex("PCId");

                    b.ToTable("Applications", (string)null);
                });

            modelBuilder.Entity("KKLauncher.DB.Entities.CollectionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.Property<Guid>("PCId")
                        .HasColumnType("uuid")
                        .HasColumnName("PCId");

                    b.HasKey("Id");

                    b.HasIndex("PCId");

                    b.ToTable("Collections", (string)null);
                });

            modelBuilder.Entity("KKLauncher.DB.Entities.PCEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("LocalIp")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("LocalIp");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Password");

                    b.Property<string>("SteamPath")
                        .HasColumnType("text")
                        .HasColumnName("SteamPath");

                    b.HasKey("Id");

                    b.ToTable("PCs", (string)null);
                });

            modelBuilder.Entity("KKLauncher.DB.Entities.WhitelistEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("TelegramId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("TelegramId");

                    b.HasKey("Id");

                    b.ToTable("Whitelists", (string)null);
                });

            modelBuilder.Entity("KKLauncher.DB.Entities.AppCollectionEntity", b =>
                {
                    b.HasOne("KKLauncher.DB.Entities.AppEntity", null)
                        .WithMany()
                        .HasForeignKey("AppId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KKLauncher.DB.Entities.CollectionEntity", null)
                        .WithMany()
                        .HasForeignKey("CollectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KKLauncher.DB.Entities.AppEntity", b =>
                {
                    b.HasOne("KKLauncher.DB.Entities.PCEntity", "PC")
                        .WithMany()
                        .HasForeignKey("PCId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PC");
                });

            modelBuilder.Entity("KKLauncher.DB.Entities.CollectionEntity", b =>
                {
                    b.HasOne("KKLauncher.DB.Entities.PCEntity", "PC")
                        .WithMany()
                        .HasForeignKey("PCId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PC");
                });
#pragma warning restore 612, 618
        }
    }
}
